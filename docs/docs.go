// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/gm/broadcast": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gm"
                ],
                "summary": "世界广播",
                "parameters": [
                    {
                        "description": "消息体",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.BroadcastReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.BroadcastAck"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.ErrResp"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/main.ErrResp"
                        }
                    }
                }
            }
        },
        "/players": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "players"
                ],
                "summary": "在线玩家列表",
                "parameters": [
                    {
                        "maximum": 500,
                        "minimum": 1,
                        "type": "integer",
                        "default": 50,
                        "description": "最多返回",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "按昵称(占位)过滤，当前用 player-\u003cid\u003e 模拟",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.PlayerBrief"
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/main.ErrResp"
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "description": "返回版本、启动时间、在线人数、场景/网格数量",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "status"
                ],
                "summary": "服务器状态",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.ServerStatus"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/main.ErrResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.BroadcastAck": {
            "type": "object",
            "properties": {
                "delivered": {
                    "type": "integer",
                    "example": 42
                }
            }
        },
        "main.BroadcastReq": {
            "type": "object",
            "required": [
                "msg"
            ],
            "properties": {
                "msg": {
                    "type": "string",
                    "example": "服务器将于10分钟后维护"
                }
            }
        },
        "main.ErrResp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "GameOffline"
                },
                "message": {
                    "type": "string",
                    "example": "game server not running"
                }
            }
        },
        "main.PlayerBrief": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1001
                },
                "name": {
                    "type": "string",
                    "example": "player-1001"
                }
            }
        },
        "main.ServerStatus": {
            "type": "object",
            "properties": {
                "onlineCount": {
                    "type": "integer",
                    "example": 42
                },
                "sceneCount": {
                    "description": "这里用 AOI 网格数表示场景粒度",
                    "type": "integer",
                    "example": 200
                },
                "startAt": {
                    "type": "integer",
                    "example": 1729400000
                },
                "version": {
                    "type": "string",
                    "example": "1.0.0"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "MMO Game Admin API",
	Description:      "管理/观测 MMO Game（Zinx）服务器的 HTTP API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
